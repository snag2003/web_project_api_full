{"ast":null,"code":"import _classCallCheck from\"/Users/stephanyacosta/Desktop/Practicum Projects/web_project_api_full/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/stephanyacosta/Desktop/Practicum Projects/web_project_api_full/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}// getAppInfo() {\n//   return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n// }\n// Load Cards from the Server\n_createClass(Api,[{key:\"getInitialCards\",value:function getInitialCards(token){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){if(res.ok){return res.json();}});}// Load User Information from the Server\n},{key:\"getUserInfo\",value:function getUserInfo(token){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){if(res.ok){return res.json();}});}// Update Profile Picture\n},{key:\"updateAvatar\",value:function updateAvatar(imageLink,token){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},method:\"PATCH\",body:JSON.stringify({avatar:imageLink})}).then(function(res){if(res.ok){return res.json();}});}// Edit Profile\n},{key:\"updateProfile\",value:function updateProfile(_ref2,token){var name=_ref2.name,about=_ref2.about;return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},method:\"PATCH\",body:JSON.stringify({name:name,about:about})}).then(function(res){if(res.ok){return res.json();}});}// Add New Card\n},{key:\"addNewCard\",value:function addNewCard(data,token){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},method:\"POST\",body:JSON.stringify({name:data.title,link:data.link})}).then(function(res){if(res.ok){return res.json();}});}// Delete Card\n},{key:\"deleteCard\",value:function deleteCard(cardId,token){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},method:\"DELETE\"});}// Add and Remove Likes\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked,token){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(cardId),{headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)},method:isLiked?\"DELETE\":\"PUT\"}).then(function(res){if(res.ok){return res.json();}});}}]);return Api;}();// Add and Remove Likes\n// changeLikeCardStatus(isLiked, cardId) {\n//   if (isLiked) {\n//     //unlike heart button\n//     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//         return Promise.reject(`Error: ${res.status}`);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   } else {\n//     //like heart button\n//     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n//       method: 'PUT',\n//       headers: this._headers,\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//         return Promise.reject(`Error: ${res.status}`);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   }\n// }\n// }\nvar api=new Api({baseUrl:\"https://api.stephanydev.justlearning.net\"});export default api;","map":{"version":3,"names":["Api","_ref","baseUrl","headers","_classCallCheck","_baseUrl","_headers","_createClass","key","value","getInitialCards","token","fetch","concat","Authorization","then","res","ok","json","getUserInfo","updateAvatar","imageLink","method","body","JSON","stringify","avatar","updateProfile","_ref2","name","about","addNewCard","data","title","link","deleteCard","cardId","changeLikeCardStatus","isLiked","api"],"sources":["/Users/stephanyacosta/Desktop/Practicum Projects/web_project_api_full/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // getAppInfo() {\n  //   return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  // }\n\n  // Load Cards from the Server\n  getInitialCards(token) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  // Load User Information from the Server\n  getUserInfo(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  // Update Profile Picture\n  updateAvatar(imageLink, token) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      method: \"PATCH\",\n      body: JSON.stringify({ avatar: imageLink }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  // Edit Profile\n  updateProfile({ name, about }, token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      method: \"PATCH\",\n      body: JSON.stringify({ name, about }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  // Add New Card\n  addNewCard(data, token) {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        name: data.title,\n        link: data.link,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n\n  // Delete Card\n  deleteCard(cardId, token) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      method: \"DELETE\",\n    });\n  }\n\n  // Add and Remove Likes\n  changeLikeCardStatus(cardId, isLiked, token) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      method: isLiked ? \"DELETE\" : \"PUT\",\n    }).then((res) => {\n      if (res.ok) {\n        return res.json();\n      }\n    });\n  }\n}\n\n// Add and Remove Likes\n// changeLikeCardStatus(isLiked, cardId) {\n//   if (isLiked) {\n//     //unlike heart button\n//     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n//       method: 'DELETE',\n//       headers: this._headers,\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//         return Promise.reject(`Error: ${res.status}`);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   } else {\n//     //like heart button\n//     return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n//       method: 'PUT',\n//       headers: this._headers,\n//     })\n//       .then((res) => {\n//         if (res.ok) {\n//           return res.json();\n//         }\n//         return Promise.reject(`Error: ${res.status}`);\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   }\n// }\n// }\n\nconst api = new Api({\n  baseUrl: \"https://api.stephanydev.justlearning.net\",\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}